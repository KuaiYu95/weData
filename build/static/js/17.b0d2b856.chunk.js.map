{"version":3,"sources":["api/ajax.tsx","api/index.tsx","containers/Todos/index.tsx"],"names":["ajax","url","type","data","urlStr","Object","keys","forEach","key","substring","length","axios","get","post","getTotal","getTimeline","addTimeline","getTodos","addTodos","modifyTodos","delTodos","getFootPrint","addFootPrint","getDiary","addDiary","getUrl","addUrl","Todos","useState","todos","setTodos","useEffect","getData","todo","setTodo","isAllChecked","setIsAllChecked","left","setLeft","select","setSelect","then","res","success","flag","every","it","isChecked","share","error","reduce","count","handleClickCheck","e","id","target","check","checked","_id","datas","map","handleClickDel","dataset","filter","handleClickSelect","className","value","onChange","placeholder","onClick","content","trim","warn","style","color","boxSizing","borderBottom","props","bg","idx","a","float","textDecoration","time","data-id","pointerEvents"],"mappings":"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","file":"static/js/17.b0d2b856.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function ajax(url:string = '', type:string = 'GET', data:any = {}):any {\r\n  \r\n  if (type === 'GET') {\r\n    let urlStr = ''\r\n    Object.keys(data).forEach((key) => {\r\n      urlStr += key + '=' + data[key] + '&'\r\n    })\r\n    if(urlStr) {\r\n      urlStr = urlStr.substring(0, urlStr.length - 1)\r\n      url = url + '?' + urlStr\r\n    }\r\n    return axios.get(url)\r\n  } else if (type === 'POST') {\r\n    return axios.post(url, data)\r\n  }\r\n}","import ajax from './ajax'\r\n// 获取首页数据\r\nexport const getTotal = (data:object) => ajax('/get-total', 'GET')\r\n// 获取时间线\r\nexport const getTimeline = (data:object) => ajax('/get-timeline', 'GET')\r\n// 添加时间线\r\nexport const addTimeline = (data:object) => ajax('/add-timeline', 'POST', data)\r\n// 获取 todos\r\nexport const getTodos = (data:object) => ajax('/get-todos', 'GET')\r\n// 添加 todo\r\nexport const addTodos = (data:object) => ajax('/add-todos', 'POST', data)\r\n// 修改 todo\r\nexport const modifyTodos = (data:object) => ajax('/modify-todos', 'POST', data)\r\n// 删除 todo\r\nexport const delTodos = (data:object) => ajax('/del-todos', 'POST', data)\r\n// 获取 足迹\r\nexport const getFootPrint = (data:object) => ajax('/get-foot-print', 'GET')\r\n// 添加 足迹\r\nexport const addFootPrint = (data:object) => ajax('/add-foot-print', 'POST', data)\r\n// 获取 日记\r\nexport const getDiary = (data:object) => ajax('/get-diary', 'GET')\r\n// 添加 日记\r\nexport const addDiary = (data:object) => ajax('/add-diary', 'POST', data)\r\n// 获取 收藏\r\nexport const getUrl = (data:object) => ajax('/get-url', 'GET')\r\n// 添加 收藏\r\nexport const addUrl = (data:object) => ajax('/add-url', 'POST', data)","import React, {useState,useEffect} from 'react'\nimport {Input, Button, Icon, Checkbox, message, Empty, Tag} from 'antd';\nimport {getTodos, addTodos, modifyTodos, delTodos} from '../../api'\nimport './index.less'\n\ninterface ITodo {\n\tcontent: string,\n  isChecked: boolean,\n  _id: string,\n  time: string,\n}\n\nfunction Todos() {\n  // 所有 Todos 组成的数组\n  const [todos, setTodos] = useState<ITodo[]>([])  \n  useEffect(() => {\n    getData()\n  }, [])\n  // 暂存输入框内容\n  const [todo, setTodo] = useState('')  \n  // 全选按钮判断\n  const [isAllChecked, setIsAllChecked] = useState<boolean>()\n  // 判断是否显示清除所有已完成任务按钮\n  // const [isHave, setIsHave] = useState<boolean>()\n  // 剩余未完成任务\n  const [left, setLeft] = useState<number>()\n  // 3选1\n  const [select, setSelect] = useState('All')\n  // 获取数据\n  const getData = function() {\n    getTodos({}).then((res:any) => {\n      if (res.data && res.data.success) {\n        setTodos(res.data.data)\n        const flag = res.data.data.every((it:ITodo) => {\n          return it.isChecked === true ? true : false\n        })\n        flag ? setIsAllChecked(true) : setIsAllChecked(false)\n        share(res.data.data)\n      } else {\n        message.error('数据请求失败，请查看网络！')\n      }\n    })\n  }\n  // left\n  const share = function(todos:any) {\n    let left = todos.reduce((count:number, it:ITodo) => {\n      return count = !it.isChecked ? count + 1 : count\n    }, 0)\n    setLeft(left)\n    left === 0 ? setIsAllChecked(true) : setIsAllChecked(false)\n  }\n  // 实时更新输入框内容到暂存区\n  const handleChangeTodo = function(e:any) {\n    setTodo(e.target.value)\n  }\n  // 添加todo按钮点击操作\n  const handleClickAdd = function() {\n    let content = todo.trim()\n    if (content === '') {\n      message.warn('请输入代办任务')\n    } else {\n      addTodos({content}).then((res:any) => {\n        if (res.data && res.data.success) {\n          getData()\n        } else {\n          message.error('数据请求失败，请查看网络！')\n        }\n      })\n    }\n  }\n  // todo任务是否完成按钮点击\n  const handleClickCheck = function(e:any) {\n    const id = e.target.id\n    const check = e.target.checked\n    modifyTodos({type: false, _id: id, isChecked: check}).then((res:any) => {\n      if (res.data && res.data.success) {\n        let datas = [...todos].map((it:ITodo) => {\n          return it._id === id ? {...it, isChecked: check} : it\n        })\n        setTodos(datas)\n        share(todos)\n      } else {\n        message.error('数据请求失败，请检查网络！')\n      }\n    })\n  }\n  // 全选按钮点击\n  const handleClickAllCheck = function() {\n    if (isAllChecked) {\n      modifyTodos({type: true, check: false}).then((res:any) => {\n        if (res.data && res.data.success) {\n          let datas = [...todos].map((it:ITodo) => {\n            return {...it, isChecked: false}\n          })\n          setTodos(datas)\n          setIsAllChecked(false)\n        } else {\n          message.error('数据请求失败，请检查网络！')\n        }\n      })\n    } else {\n      modifyTodos({type: true, check: true}).then((res:any) => {\n        if (res.data && res.data.success) {\n          let datas = [...todos].map((it:ITodo) => {\n            if (!it.isChecked) {\n              return {...it, isChecked: true}\n            } else {\n              return it\n            }\n          })\n          setTodos(datas)\n          setIsAllChecked(true)\n        } else {\n          message.error('数据请求失败，请检查网络！')\n        }\n      })\n    }\n  }\n  // todo任务删除按钮\n  const handleClickDel = function(e:any) {\n    const id = e.target.dataset.id\n    delTodos({_id: id, type: false}).then((res:any) => {\n      if (res.data && res.data.success) {\n        let datas = todos.filter((it:ITodo) => {\n          return it._id === id ? false : true\n        })\n        setTodos(datas)\n      } else {\n        message.error('数据请求失败，请检查网络！')\n      }\n    })\n  }\n  // 清除所有已完成任务按钮点击\n  const handleClickCle = function() {\n    delTodos({type: true}).then((res:any) => {\n      if (res.data && res.data.success) {\n        let datas = todos.filter((it:ITodo) => {\n          return it.isChecked ? false : true\n        })\n        setTodos(datas)\n      } else {\n        message.error('数据请求失败，请检查网络！')\n      }\n    })\n  }\n  // 三选一\n  const handleClickSelect = function(type:string):void {\n    switch(type) {\n      case 'All': \n        setSelect('All')\n        break\n      case 'Active': \n        setSelect('Active')\n        break\n      case 'Completed':\n        setSelect('Completed')\n    }\n  }\n  // todos\n  const TodosRender = function(props:any) {\n    const {value} = props\n    const bg:string[] = ['magenta', 'gold', 'cyan', 'volcano', 'blue', 'geekblue', 'orange', 'red', 'green', 'purple']\n    let datas = []\n    switch(select) {\n      case 'Active': \n        datas = value.filter((it:ITodo) => {\n          return it.isChecked ? false : true\n        })\n        break\n      case 'Completed':\n        datas = value.filter((it:ITodo) => {\n          return it.isChecked ? true : false\n        })\n        break\n      default:\n        datas = value\n    }\n    share(datas)\n    return (\n      <div className=\"list\">\n        {datas.length > 0 ? datas.map((it:ITodo, idx:number) => {\n          let a:any = bg[idx % 10]\n          return (\n            <div className=\"item\" key={it._id}>\n              <Checkbox style={{float: 'left'}} id={it._id} checked={it.isChecked} onClick={handleClickCheck} />\n              <div className=\"block\">\n                <Tag color={a}>\n                  <div className=\"todo\" style={it.isChecked ? {textDecoration: 'line-through'} : {}}>\n                    {idx + 1 + '. ' + it.content}\n                  </div>\n                </Tag>\n                <div className=\"time\">{it.time}</div>\n              </div>\n              <div style={{float: 'right'}} data-id={it._id} onClick={handleClickDel}>\n                <span style={{pointerEvents: \"none\", color: 'gray'}}>\n                  <Icon type=\"delete\" />\n                </span>\n              </div>\n            </div>\n          )\n        }) : <Empty />}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"todos-container\">\n      <div className=\"header\">\n        <Input value={todo} onChange={handleChangeTodo} placeholder=\"What needs to be done?\" />\n        <Button className=\"btn\" onClick={handleClickAdd} type=\"primary\">Add</Button>\n      </div>\n      <div className=\"center\">\n        <Checkbox checked={isAllChecked ? true : false} onClick={handleClickAllCheck} /> \n        <span className=\"ml\"> <span className=\"left\">{left}</span> items left</span>\n        <div style={select === 'All' ? {color:'#EBD4AA', boxSizing:'border-box', borderBottom: '3px solid #EBD4AA', } : {}} \n          onClick={() => handleClickSelect('All')} className=\"all ml\">All</div>\n        <div style={select === 'Active' ? {color:'#EBD4AA', boxSizing:'border-box', borderBottom: '3px solid #EBD4AA', } : {}} \n          onClick={() => handleClickSelect('Active')} className=\"active ml\">Active</div>\n        <div style={select === 'Completed' ? {color:'#EBD4AA', boxSizing:'border-box', borderBottom: '3px solid #EBD4AA', } : {}} \n          onClick={() => handleClickSelect('Completed')} className=\"completed ml\">Completed</div>\n        <span className=\"clear ml\" onClick={handleClickCle}><Tag color='blue'>Clear Completed</Tag></span>\n      </div>\n      <TodosRender value={todos} />\n    </div>\n  )\n}\n\nexport default Todos"],"sourceRoot":""}