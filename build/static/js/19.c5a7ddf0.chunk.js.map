{"version":3,"sources":["api/ajax.tsx","api/index.tsx","containers/Todos/index.tsx"],"names":["ajax","url","type","data","urlStr","Object","keys","forEach","key","substring","length","axios","get","post","confirm","localStorage","getItem","err","getTotal","getTodos","addTodos","message","error","modifyTodos","delTodos","getFootPrint","addFootPrint","getDiary","addDiary","getUrl","addUrl","getBlog","addBlog","getBlogDetail","Todos","useState","todos","setTodos","useEffect","getData","todo","setTodo","isAllChecked","setIsAllChecked","left","setLeft","select","setSelect","then","res","success","flag","every","it","isChecked","share","reduce","count","handleClickCheck","e","id","target","check","checked","_id","datas","map","handleClickDel","dataset","filter","handleClickSelect","className","value","onChange","placeholder","onClick","content","trim","warn","style","color","boxSizing","borderBottom","props","bg","idx","a","float","textDecoration","time","data-id","pointerEvents","description","marginTop"],"mappings":"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","file":"static/js/19.c5a7ddf0.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function ajax(url:string = '', type:string = 'GET', data:any = {}):any {\r\n  \r\n  if (type === 'GET') {\r\n    let urlStr = ''\r\n    Object.keys(data).forEach((key) => {\r\n      urlStr += key + '=' + data[key] + '&'\r\n    })\r\n    if(urlStr) {\r\n      urlStr = urlStr.substring(0, urlStr.length - 1)\r\n      url = url + '?' + urlStr\r\n    }\r\n    return axios.get(url)\r\n  } else if (type === 'POST') {\r\n    return axios.post(url, data)\r\n  }\r\n}","import ajax from './ajax'\r\nimport { message } from 'antd'\r\nlet confirm = localStorage.getItem('confirm')\r\nlet err = '对不起，您没有权限'\r\n// 获取 首页数据\r\nexport const getTotal = (data: object) => ajax('/get-total', 'GET')\r\n// 获取 时间线\r\nexport const getTimeline = (data: object) => ajax('/get-timeline', 'GET')\r\n// 添加 时间线\r\nexport const addTimeline = (data: object) => {\r\n  if (confirm !== '0913') {\r\n    message.error(err)\r\n    return\r\n  }\r\n  return ajax('/add-timeline', 'POST', data)\r\n}\r\n// 获取 todos\r\nexport const getTodos = (data: object) => ajax('/get-todos', 'GET')\r\n// 添加 todo\r\nexport const addTodos = (data: object) => {\r\n  if (confirm !== '0913') {\r\n    message.error(err)\r\n    return\r\n  }\r\n  return ajax('/add-todos', 'POST', data)\r\n}\r\n// 修改 todo\r\nexport const modifyTodos = (data: object) => ajax('/modify-todos', 'POST', data)\r\n// 删除 todo\r\nexport const delTodos = (data: object) => ajax('/del-todos', 'POST', data)\r\n// 获取 足迹\r\nexport const getFootPrint = (data: object) => ajax('/get-foot-print', 'GET')\r\n// 添加 足迹\r\nexport const addFootPrint = (data: object) => {\r\n  if (confirm !== '0913') {\r\n    message.error(err)\r\n    return\r\n  }\r\n  return ajax('/add-foot-print', 'POST', data)\r\n}\r\n// 获取 日记\r\nexport const getDiary = (data: object) => ajax('/get-diary', 'GET')\r\n// 添加 日记\r\nexport const addDiary = (data: object) => {\r\n  if (confirm !== '0913') {\r\n    message.error(err)\r\n    return\r\n  }\r\n  return ajax('/add-diary', 'POST', data)\r\n}\r\n// 获取 收藏\r\nexport const getUrl = (data: object) => ajax('/get-url', 'GET')\r\n// 添加 收藏\r\nexport const addUrl = (data: object) => {\r\n  if (confirm !== '0913') {\r\n    message.error(err)\r\n    return\r\n  }\r\n  return ajax('/add-url', 'POST', data)\r\n}\r\n// 获取 收藏\r\nexport const getBlog = (data: object) => ajax('/get-blog', 'GET', data)\r\n// 添加 blog\r\nexport const addBlog = (data: object) => {\r\n  if (confirm !== '0913') {\r\n    message.error(err)\r\n    return\r\n  }\r\n  return ajax('/add-blog', 'POST', data)\r\n}\r\n// 获取 blog详情\r\nexport const getBlogDetail = (data: object) => ajax('/get-blog-detail', 'GET', data)\r\n","import React, {useState,useEffect} from 'react'\nimport {Input, Button, Icon, Checkbox, message, Empty, Tag} from 'antd';\nimport {getTodos, addTodos, modifyTodos, delTodos} from '../../api'\nimport './index.less'\n\ninterface ITodo {\n\tcontent: string,\n  isChecked: boolean,\n  _id: string,\n  time: string,\n}\n\nfunction Todos() {\n  // 所有 Todos 组成的数组\n  const [todos, setTodos] = useState<ITodo[]>([])  \n  useEffect(() => {\n    getData()\n  }, [])\n  // 暂存输入框内容\n  const [todo, setTodo] = useState('')  \n  // 全选按钮判断\n  const [isAllChecked, setIsAllChecked] = useState<boolean>()\n  // 判断是否显示清除所有已完成任务按钮\n  // const [isHave, setIsHave] = useState<boolean>()\n  // 剩余未完成任务\n  const [left, setLeft] = useState<number>()\n  // 3选1\n  const [select, setSelect] = useState('All')\n  // 获取数据\n  const getData = function() {\n    getTodos({}).then((res:any) => {\n      if (res.data && res.data.success) {\n        setTodos(res.data.data)\n        const flag = res.data.data.every((it:ITodo) => {\n          return it.isChecked === true ? true : false\n        })\n        flag ? setIsAllChecked(true) : setIsAllChecked(false)\n        share(res.data.data)\n      } else {\n        message.error('数据请求失败，请查看网络！')\n      }\n    })\n  }\n  // left\n  const share = function(todos:any) {\n    let left = todos.reduce((count:number, it:ITodo) => {\n      return count = !it.isChecked ? count + 1 : count\n    }, 0)\n    setLeft(left)\n    left === 0 ? setIsAllChecked(true) : setIsAllChecked(false)\n  }\n  // 实时更新输入框内容到暂存区\n  const handleChangeTodo = function(e:any) {\n    setTodo(e.target.value)\n  }\n  // 添加todo按钮点击操作\n  const handleClickAdd = function() {\n    let content = todo.trim()\n    if (content === '') {\n      message.warn('请输入代办任务')\n    } else {\n      addTodos({content}).then((res:any) => {\n        if (res.data && res.data.success) {\n          getData()\n        } else {\n          message.error('数据请求失败，请查看网络！')\n        }\n      })\n    }\n  }\n  // todo任务是否完成按钮点击\n  const handleClickCheck = function(e:any) {\n    const id = e.target.id\n    const check = e.target.checked\n    modifyTodos({type: false, _id: id, isChecked: check}).then((res:any) => {\n      if (res.data && res.data.success) {\n        let datas = [...todos].map((it:ITodo) => {\n          return it._id === id ? {...it, isChecked: check} : it\n        })\n        setTodos(datas)\n        share(todos)\n      } else {\n        message.error('数据请求失败，请检查网络！')\n      }\n    })\n  }\n  // 全选按钮点击\n  const handleClickAllCheck = function() {\n    if (isAllChecked) {\n      modifyTodos({type: true, check: false}).then((res:any) => {\n        if (res.data && res.data.success) {\n          let datas = [...todos].map((it:ITodo) => {\n            return {...it, isChecked: false}\n          })\n          setTodos(datas)\n          setIsAllChecked(false)\n        } else {\n          message.error('数据请求失败，请检查网络！')\n        }\n      })\n    } else {\n      modifyTodos({type: true, check: true}).then((res:any) => {\n        if (res.data && res.data.success) {\n          let datas = [...todos].map((it:ITodo) => {\n            if (!it.isChecked) {\n              return {...it, isChecked: true}\n            } else {\n              return it\n            }\n          })\n          setTodos(datas)\n          setIsAllChecked(true)\n        } else {\n          message.error('数据请求失败，请检查网络！')\n        }\n      })\n    }\n  }\n  // todo任务删除按钮\n  const handleClickDel = function(e:any) {\n    const id = e.target.dataset.id\n    delTodos({_id: id, type: false}).then((res:any) => {\n      if (res.data && res.data.success) {\n        let datas = todos.filter((it:ITodo) => {\n          return it._id === id ? false : true\n        })\n        setTodos(datas)\n      } else {\n        message.error('数据请求失败，请检查网络！')\n      }\n    })\n  }\n  // 清除所有已完成任务按钮点击\n  const handleClickCle = function() {\n    delTodos({type: true}).then((res:any) => {\n      if (res.data && res.data.success) {\n        let datas = todos.filter((it:ITodo) => {\n          return it.isChecked ? false : true\n        })\n        setTodos(datas)\n      } else {\n        message.error('数据请求失败，请检查网络！')\n      }\n    })\n  }\n  // 三选一\n  const handleClickSelect = function(type:string):void {\n    switch(type) {\n      case 'All': \n        setSelect('All')\n        break\n      case 'Active': \n        setSelect('Active')\n        break\n      case 'Completed':\n        setSelect('Completed')\n    }\n  }\n  // todos\n  const TodosRender = function(props:any) {\n    const {value} = props\n    const bg:string[] = ['magenta', 'gold', 'cyan', 'volcano', 'blue', 'geekblue', 'orange', 'red', 'green', 'purple']\n    let datas = []\n    switch(select) {\n      case 'Active': \n        datas = value.filter((it:ITodo) => {\n          return it.isChecked ? false : true\n        })\n        break\n      case 'Completed':\n        datas = value.filter((it:ITodo) => {\n          return it.isChecked ? true : false\n        })\n        break\n      default:\n        datas = value\n    }\n    share(datas)\n    return (\n      <div className=\"list\">\n        {datas.length > 0 ? datas.map((it:ITodo, idx:number) => {\n          let a:any = bg[idx % 10]\n          return (\n            <div className=\"item\" key={it._id}>\n              <Checkbox style={{float: 'left'}} id={it._id} checked={it.isChecked} onClick={handleClickCheck} />\n              <div className=\"block\">\n                <Tag color={a}>\n                  <div className=\"todo\" style={it.isChecked ? {textDecoration: 'line-through'} : {}}>\n                    {idx + 1 + '. ' + it.content}\n                  </div>\n                </Tag>\n                <div className=\"time\">{it.time}</div>\n              </div>\n              <div style={{float: 'right'}} data-id={it._id} onClick={handleClickDel}>\n                <span style={{pointerEvents: \"none\", color: 'gray'}}>\n                  <Icon type=\"delete\" />\n                </span>\n              </div>\n            </div>\n          )\n        }) : <Empty description=\"暂无数据\" style={{ color: '#fff', marginTop: '20vh'}} />}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"todos-container\">\n      <div className=\"header\">\n        <Input value={todo} onChange={handleChangeTodo} placeholder=\"What needs to be done?\" />\n        <Button className=\"btn\" onClick={handleClickAdd} type=\"primary\">Add</Button>\n      </div>\n      <div className=\"center\">\n        <Checkbox checked={isAllChecked ? true : false} onClick={handleClickAllCheck} /> \n        <span className=\"ml\"> <span className=\"left\">{left}</span> items left</span>\n        <div style={select === 'All' ? {color:'#1CACF4', boxSizing:'border-box', borderBottom: '3px solid #1CACF4', } : {}} \n          onClick={() => handleClickSelect('All')} className=\"all ml\">All</div>\n        <div style={select === 'Active' ? {color:'#1CACF4', boxSizing:'border-box', borderBottom: '3px solid #1CACF4', } : {}} \n          onClick={() => handleClickSelect('Active')} className=\"active ml\">Active</div>\n        <div style={select === 'Completed' ? {color:'#1CACF4', boxSizing:'border-box', borderBottom: '3px solid #1CACF4', } : {}} \n          onClick={() => handleClickSelect('Completed')} className=\"completed ml\">Completed</div>\n        <span className=\"clear ml\" onClick={handleClickCle}><Tag color='blue'>Clear Completed</Tag></span>\n      </div>\n      <TodosRender value={todos} />\n    </div>\n  )\n}\n\nexport default Todos"],"sourceRoot":""}